I have configured Vault and the credential path as per the below configuration:
```yml
name: ZPA Test
on:
  pull_request:
    types: [opened, synchronize]
  merge_group:
    types: [checks_requested]
  push:
    branches:
      - master
  schedule:
    - cron: '0 11 * * 1-5' # UTC
  workflow_dispatch:

jobs:
  zpa-beta-tenants:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        goVersion: ["1.21"]
        environment:
          - zpa-beta-tenants
    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.goVersion }}

      - name: Clean existing Go modules
        run: go clean -modcache

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set Go env
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: go mod download

      - name: Retrieve Secrets from Vault for Beta
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          tlsSkipVerify: true
          secrets: |
            zscaler/data/zpa-beta-tenants client_id | ZPA_CLIENT_ID;
            zscaler/data/zpa-beta-tenants client_secret | ZPA_CLIENT_SECRET;
            zscaler/data/zpa-beta-tenants customer_id | ZPA_CUSTOMER_ID;
            zscaler/data/zpa-beta-tenants cloud | ZPA_CLOUD;

      - name: Run tests for Beta Tenants
        uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 20
          command: |
            ZPA_CLIENT_ID: ${{ env.ZPA_CLIENT_ID }}
            ZPA_CLIENT_SECRET: ${{ env.ZPA_CLIENT_SECRET }}
            ZPA_CUSTOMER_ID: ${{ env.ZPA_CUSTOMER_ID }}
            ZPA_CLOUD: ${{ env.ZPA_CLOUD }}
            make test:unit
            make test:unit:zpa
            make sweep:zpa
            make test:integration:zpa
```

Howeve,when executing the workflow I am receiving the following error in Github actions:
```sh
Error: You must provide a valid path and key. Input: "zscaler/data/zpa-beta-tenants ZPA_CLIENT_ID | client_id
zscaler/data/zpa-beta-tenants ZPA_CLIENT_SECRET | client_secret
zscaler/data/zpa-beta-tenants ZPA_CUSTOMER_ID | customer_id
zscaler/data/zpa-beta-tenants ZPA_CLOUD | cloud"
```

For context, when configuring this in Jenkins I use the following configuration:
```jenkinsfile
pipeline {
    agent any
    tools {
      go 'go-1.19'
    }
    stages {
      stage('ZSCALER_SDK_GO Build') {
        parallel {
          stage('ZPA_QA_TENANT01') {
            agent any
            steps {
              withVault(configuration: [engineVersion: 2, timeout: 60, vaultCredentialId: 'zscaler', vaultUrl: 'http://ec2-34-220-1-32.us-west-2.compute.amazonaws.com:8200'], vaultSecrets: [
                [path: 'zscaler/zpacloudqa1', secretValues: [
                  [envVar: 'ZPA_CLIENT_ID', vaultKey: 'client_id'],
                  [envVar: 'ZPA_CLIENT_SECRET', vaultKey: 'client_secret'],
                  [envVar: 'ZPA_CUSTOMER_ID', vaultKey: 'customer_id'],
                  [envVar: 'ZPA_CLOUD', vaultKey: 'zpa_cloud']
                ]]
              ])
              {
                git branch: 'master', url: 'https://github.com/zscaler/zscaler-sdk-go.git'
                sh 'make sweep:zpa'
                sh 'make test:unit:zpa'
                sh 'make test:integration:zpa'
                testNG()
              }
            }
          }
          stage('ZPA_QA_TENANT02') {
            agent any
            steps {
              withVault(configuration: [engineVersion: 2, timeout: 60, vaultCredentialId: 'zscaler', vaultUrl: 'http://ec2-34-220-1-32.us-west-2.compute.amazonaws.com:8200'], vaultSecrets: [
                [path: 'zscaler/zpacloudqa2', secretValues: [
                  [envVar: 'ZPA_CLIENT_ID', vaultKey: 'client_id'],
                  [envVar: 'ZPA_CLIENT_SECRET', vaultKey: 'client_secret'],
                  [envVar: 'ZPA_CUSTOMER_ID', vaultKey: 'customer_id'],
                  [envVar: 'ZPA_CLOUD', vaultKey: 'zpa_cloud']
                ]]
              ])
              {
                git branch: 'master', url: 'https://github.com/zscaler/zscaler-sdk-go.git'
                sh 'make sweep:zpa'
                sh 'make test:unit:zpa'
                sh 'make test:integration:zpa'
                testNG()
              }
            }
          }
          stage('ZPA_QA_TENANT03') {
            agent any
            steps {
              withVault(configuration: [engineVersion: 2, timeout: 60, vaultCredentialId: 'zscaler', vaultUrl: 'http://ec2-34-220-1-32.us-west-2.compute.amazonaws.com:8200'], vaultSecrets: [
                [path: 'zscaler/zpacloudqa3', secretValues: [
                  [envVar: 'ZPA_CLIENT_ID', vaultKey: 'client_id'],
                  [envVar: 'ZPA_CLIENT_SECRET', vaultKey: 'client_secret'],
                  [envVar: 'ZPA_CUSTOMER_ID', vaultKey: 'customer_id'],
                  [envVar: 'ZPA_CLOUD', vaultKey: 'zpa_cloud']
                ]]
              ])
              {
                git branch: 'master', url: 'https://github.com/zscaler/zscaler-sdk-go.git'
                sh 'make sweep:zpa'
                sh 'make test:unit:zpa'
                sh 'make test:integration:zpa'
                testNG()
              }
            }
          }
          stage('ZPA_BETA_TENANT01') {
            agent any
            steps {
              withVault(configuration: [engineVersion: 2, timeout: 60, vaultCredentialId: 'zscaler', vaultUrl: 'http://ec2-34-220-1-32.us-west-2.compute.amazonaws.com:8200'], vaultSecrets: [
                [path: 'zscaler/zpacloudbeta', secretValues: [
                  [envVar: 'ZPA_CLIENT_ID', vaultKey: 'client_id'],
                  [envVar: 'ZPA_CLIENT_SECRET', vaultKey: 'client_secret'],
                  [envVar: 'ZPA_CUSTOMER_ID', vaultKey: 'customer_id'],
                  [envVar: 'ZPA_CLOUD', vaultKey: 'zpa_cloud']
                ]]
              ])
              {
                git branch: 'master', url: 'https://github.com/zscaler/zscaler-sdk-go.git'
                sh 'make sweep:zpa'
                sh 'make test:unit:zpa'
                sh 'make test:integration:zpa'
                testNG()
              }
            }
          }
          stage('ZPA_PRODUCTION01') {
            agent any
            steps {
              withVault(configuration: [engineVersion: 2, timeout: 60, vaultCredentialId: 'zscaler', vaultUrl: 'http://ec2-34-220-1-32.us-west-2.compute.amazonaws.com:8200'], vaultSecrets: [
                [path: 'zscaler/zpacloudprod', secretValues: [
                  [envVar: 'ZPA_CLIENT_ID', vaultKey: 'client_id'],
                  [envVar: 'ZPA_CLIENT_SECRET', vaultKey: 'client_secret'],
                  [envVar: 'ZPA_CUSTOMER_ID', vaultKey: 'customer_id'],
                  [envVar: 'ZPA_CLOUD', vaultKey: 'zpa_cloud']
                ]]
              ])
              {
                git branch: 'master', url: 'https://github.com/zscaler/zscaler-sdk-go.git'
                sh 'make sweep:zpa'
                sh 'make test:unit:zpa'
                sh 'make test:integration:zpa'
                testNG()
              }
            }
          }
          stage('ZIA_ZSBETA') {
            agent any
            steps {
              withVault(configuration: [engineVersion: 2, timeout: 60, vaultCredentialId: 'zscaler', vaultUrl: 'http://ec2-34-220-1-32.us-west-2.compute.amazonaws.com:8200'], vaultSecrets: [
                [path: 'zscaler/zscalerbeta', secretValues: [
                  [envVar: 'ZIA_USERNAME', vaultKey: 'username'],
                  [envVar: 'ZIA_PASSWORD', vaultKey: 'password'],
                  [envVar: 'ZIA_API_KEY', vaultKey: 'api_key'],
                  [envVar: 'ZIA_CLOUD', vaultKey: 'cloud'],
                  [envVar: 'ZIA_SANDBOX_TOKEN', vaultKey: 'api_token'],
                  [envVar: 'ZPA_CLIENT_ID', vaultKey: 'client_id'],
                  [envVar: 'ZPA_CLIENT_SECRET', vaultKey: 'client_secret'],
                  [envVar: 'ZPA_CUSTOMER_ID', vaultKey: 'customer_id'],
                  [envVar: 'ZPA_CLOUD', vaultKey: 'zpa_cloud']
                ]]
              ])
              {
                git branch: 'master', url: 'https://github.com/zscaler/zscaler-sdk-go.git'
                sh 'make sweep:zia'
                sh 'make test:integration:zia'
                testNG()
              }
            }
          }
          stage('ZIA_ZSCLOUD') {
            agent any
            steps {
              withVault(configuration: [engineVersion: 2, timeout: 60, vaultCredentialId: 'zscaler', vaultUrl: 'http://ec2-34-220-1-32.us-west-2.compute.amazonaws.com:8200'], vaultSecrets: [
                [path: 'zscaler/zscloud', secretValues: [
                  [envVar: 'ZIA_USERNAME', vaultKey: 'username'],
                  [envVar: 'ZIA_PASSWORD', vaultKey: 'password'],
                  [envVar: 'ZIA_API_KEY', vaultKey: 'api_key'],
                  [envVar: 'ZIA_CLOUD', vaultKey: 'cloud'],
                  [envVar: 'ZIA_SANDBOX_TOKEN', vaultKey: 'api_token'],
                  [envVar: 'ZPA_CLIENT_ID', vaultKey: 'client_id'],
                  [envVar: 'ZPA_CLIENT_SECRET', vaultKey: 'client_secret'],
                  [envVar: 'ZPA_CUSTOMER_ID', vaultKey: 'customer_id'],
                  [envVar: 'ZPA_CLOUD', vaultKey: 'zpa_cloud']
                ]]
              ]) {
                git branch: 'master', url: 'https://github.com/zscaler/zscaler-sdk-go.git'
                sh 'make sweep:zia'
                sh 'make test:integration:zia'
                testNG()
              }
            }
          }
          stage('ZIA_ZSCALER') {
            agent any
            steps {
              withVault(configuration: [engineVersion: 2, timeout: 60, vaultCredentialId: 'zscaler', vaultUrl: 'http://ec2-34-220-1-32.us-west-2.compute.amazonaws.com:8200'], vaultSecrets: [
                [path: 'zscaler/ziazscaler', secretValues: [
                  [envVar: 'ZIA_USERNAME', vaultKey: 'username'],
                  [envVar: 'ZIA_PASSWORD', vaultKey: 'password'],
                  [envVar: 'ZIA_API_KEY', vaultKey: 'api_key'],
                  [envVar: 'ZIA_CLOUD', vaultKey: 'cloud'],
                  [envVar: 'ZIA_SANDBOX_TOKEN', vaultKey: 'api_token'],
                  [envVar: 'ZPA_CLIENT_ID', vaultKey: 'client_id'],
                  [envVar: 'ZPA_CLIENT_SECRET', vaultKey: 'client_secret'],
                  [envVar: 'ZPA_CUSTOMER_ID', vaultKey: 'customer_id'],
                  [envVar: 'ZPA_CLOUD', vaultKey: 'zpa_cloud']
                ]]
              ]) {
                git branch: 'master', url: 'https://github.com/zscaler/zscaler-sdk-go.git'
                sh 'make sweep:zia'
                sh 'make test:integration:zia'
                testNG()
              }
            }
          }
          stage('ZIA_ZSONE') {
            agent any
            steps {
              withVault(configuration: [engineVersion: 2, timeout: 60, vaultCredentialId: 'zscaler', vaultUrl: 'http://ec2-34-220-1-32.us-west-2.compute.amazonaws.com:8200'], vaultSecrets: [
                [path: 'zscaler/zscalerone', secretValues: [
                  [envVar: 'ZIA_USERNAME', vaultKey: 'username'],
                  [envVar: 'ZIA_PASSWORD', vaultKey: 'password'],
                  [envVar: 'ZIA_API_KEY', vaultKey: 'api_key'],
                  [envVar: 'ZIA_CLOUD', vaultKey: 'cloud'],
                  [envVar: 'ZPA_CLIENT_ID', vaultKey: 'client_id'],
                  [envVar: 'ZPA_CLIENT_SECRET', vaultKey: 'client_secret'],
                  [envVar: 'ZPA_CUSTOMER_ID', vaultKey: 'customer_id'],
                  [envVar: 'ZPA_CLOUD', vaultKey: 'zpa_cloud']
                ]]
              ]) {
                git branch: 'master', url: 'https://github.com/zscaler/zscaler-sdk-go.git'
                sh 'make sweep:zia'
                sh 'make test:integration:zia'
                testNG()
              }
            }
          }
          stage('ZIA_ZSTWO') {
            agent any
            steps {
              withVault(configuration: [engineVersion: 2, timeout: 60, vaultCredentialId: 'zscaler', vaultUrl: 'http://ec2-34-220-1-32.us-west-2.compute.amazonaws.com:8200'], vaultSecrets: [
                [path: 'zscaler/zscalertwo', secretValues: [
                  [envVar: 'ZIA_USERNAME', vaultKey: 'username'],
                  [envVar: 'ZIA_PASSWORD', vaultKey: 'password'],
                  [envVar: 'ZIA_API_KEY', vaultKey: 'api_key'],
                  [envVar: 'ZIA_CLOUD', vaultKey: 'cloud'],
                  [envVar: 'ZIA_SANDBOX_TOKEN', vaultKey: 'api_token'],
                  [envVar: 'ZPA_CLIENT_ID', vaultKey: 'client_id'],
                  [envVar: 'ZPA_CLIENT_SECRET', vaultKey: 'client_secret'],
                  [envVar: 'ZPA_CUSTOMER_ID', vaultKey: 'customer_id'],
                  [envVar: 'ZPA_CLOUD', vaultKey: 'zpa_cloud']
                ]]
              ])
              {
                git branch: 'master', url: 'https://github.com/zscaler/zscaler-sdk-go.git'
                sh 'make sweep:zia'
                sh 'make test:integration:zia'
                testNG()
              }
            }
          }
          stage('ZIA_ZSTHREE') {
            agent any
            steps {
              withVault(configuration: [engineVersion: 2, timeout: 60, vaultCredentialId: 'zscaler', vaultUrl: 'http://ec2-34-220-1-32.us-west-2.compute.amazonaws.com:8200'], vaultSecrets: [
                [path: 'zscaler/zscalerthree', secretValues: [
                  [envVar: 'ZIA_USERNAME', vaultKey: 'username'],
                  [envVar: 'ZIA_PASSWORD', vaultKey: 'password'],
                  [envVar: 'ZIA_API_KEY', vaultKey: 'api_key'],
                  [envVar: 'ZIA_CLOUD', vaultKey: 'cloud'],
                  [envVar: 'ZIA_SANDBOX_TOKEN', vaultKey: 'api_token'],
                  [envVar: 'ZPA_CLIENT_ID', vaultKey: 'client_id'],
                  [envVar: 'ZPA_CLIENT_SECRET', vaultKey: 'client_secret'],
                  [envVar: 'ZPA_CUSTOMER_ID', vaultKey: 'customer_id'],
                  [envVar: 'ZPA_CLOUD', vaultKey: 'zpa_cloud']
                ]]
              ])
              {
                git branch: 'master', url: 'https://github.com/zscaler/zscaler-sdk-go.git'
                sh 'make sweep:zia'
                sh 'make test:integration:zia'
                testNG()
              }
            }
          }
        }
      }
    }
  }

